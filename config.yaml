---
# config file for IPUC

# the namespace istio lives in, in case you're not using the default
istioSystemNamespace: istio-system

# don't label or restart pods in these namespaces
ignoreNamespaces: []

# label and restart pods in ONLY these namespaces
restrictNamespaces: []

# if false, don't restart pods, just report what would have been done in the logs
restartingEnabled: true

# if false, don't label pods as outdated, just report them in the logs
labelingEnabled: true

# when restarting controllers, wait this long between each restart (TODO)
restartDelay: 1m

# if a namespace was created more than this amount of time ago, don't look at it
minNamespcaeAge: 10m
minPodAge: 10m

# when a pod is deemed outdated, set this label with a timestamp in nanoseconds-since-epoch
oudatedPodLabelName: ipuc.cloudera.com/outdatedAt

# when we trigger a rollout restart, do so by adding this annotation to the
# pod spec of the controller resource, with a timestamp value.
restartAnnotationName: ipuc.cloudera.com/restartedAt

# these probably shouldn't be configurable. TODO: They should come from the Istio libraries
# we're pulling in, but maybe this would be useful for testing?
istioTagLabelName: istio.io/tag
istioRevLabelName: istio.io/rev
# the mutating webhooks we want to watch in istio's namespace will have this label to identify them
# TODO: can we get this from Istio's libraries as well?
webhookAppLabel: app=sidecar-injector
