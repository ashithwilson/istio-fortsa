---
name: "Release"

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      # this takes the same amount of time as using docker-build, but doesn't currently work...
      # it seems the binary in the docker image isn't being named '/manager'
      # - name: Run GoReleaser
      #   uses: goreleaser/goreleaser-action@v6
      #   with:
      #     distribution: goreleaser
      #     version: "~> v2"
      #     args: release --clean
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     KO_DOCKER_REPO: ghcr.io/${{ github.repository }}
      # this takes the same amount of time as using goreleaser, but doesn't create release tarballs
      - name: Build and Push Docker Images
        run: make docker-buildx IMAGE_TAG_BASE=ghcr.io/${{ github.actor }}/istio-fortsa GIT_TAG=${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push OLM Bundle Image
        run: make bundle bundle-build bundle-push IMAGE_TAG_BASE=ghcr.io/${{ github.actor }}/istio-fortsa GIT_TAG=${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push OLM Catalog Image
        run: make catalog-build catalog-push IMAGE_TAG_BASE=ghcr.io/${{ github.actor }}/istio-fortsa GIT_TAG=${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Run gh-pages chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Run OCI chart-releaser
        uses: bitdeps/helm-oci-charts-releaser@v0.1.0
        with:
            oci_registry: ghcr.io/${{ github.actor }}
            oci_username: ${{ github.actor }}
            oci_password: ${{ secrets.GITHUB_TOKEN }}
            github_token: ${{ secrets.GITHUB_TOKEN }}
